---
- hosts: "api_{{ env }}"
  vars_files:
    - vars.yml
    - "{{ install_root }}/.credentials/db.yml"
  gather_facts: false
  become: yes

  tasks:
    - name: Install system packages
      apt:
        pkg: "{{ item }}"
        update-cache: yes
      with_items: "{{ system_packages }}"

    - name: Clean repository directory
      file:
        state: absent
        path: "{{ install_root }}/{{ project_name }}"

    - name: Clone/pull project repository
      git:
        repo: "{{ repository_url }}"
        version: dev
        dest: "{{ install_root }}/{{ project_name }}"
        accept_hostkey: yes
        force: yes

    - name: Apply Django configuration
      template:
        src: settings.j2
        dest: "{{ install_root }}/{{ project_name }}/{{ project_name }}/settings.py"

    - name: Apply init db script
      template:
        src: initdb.sh.j2
        dest: "{{ install_root }}/{{ project_name }}/provision/scripts/db/initdb.sh"

    - name: Rebuild application image
      command: "docker-compose -f provision/{{ env }}/docker-compose.yml build"
      become: true
      args:
        chdir: "{{ install_root }}/{{ project_name }}"

    - name: Create/recreate all application containers
      command: "docker-compose -f provision/{{ env }}/docker-compose.yml up -d --force-recreate"
      become: true
      args:
        chdir: "{{ install_root }}/{{ project_name }}"

    - name: Make Django migrations
      command: "docker-compose -f provision/{{ env }}/docker-compose.yml exec -d api python3 manage.py makemigrations --noinput"
      become: true
      args:
        chdir: "{{ install_root }}/{{ project_name }}"

    - name: Apply Django migrations
      command: "docker-compose -f provision/{{ env }}/docker-compose.yml exec -d api python3 manage.py migrate --noinput"
      become: true
      args:
        chdir: "{{ install_root }}/{{ project_name }}"

    - name: Collect project static files
      command: "docker-compose -f provision/{{ env }}/docker-compose.yml exec -d api python3 manage.py collectstatic --noinput"
      become: true
      args:
        chdir: "{{ install_root }}/{{ project_name }}"
